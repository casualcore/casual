from casual.make.functiondefinitions import *


Include( "$(CASUAL_BUILD_ENVIRONMENT)")


INCLUDE_PATHS = ["include",
    "../common/include",
    "../xatmi/include",
    "$(YAML_INCLUDE_PATH)",
    "$(JSON_INCLUDE_PATH)",
	"$(UNITTEST_INCLUDE_PATH)"]
	
LIBRARY_PATHS = ["../common/bin",
    "../xatmi/bin",
    "$(YAML_LIBRARY_PATH)",
    "$(JSON_LIBRARY_PATH)"]

SetIncludePaths( INCLUDE_PATHS)
SetLibraryPaths( LIBRARY_PATHS)

casual_sf_objectfiles = [
    Compile( "source/archive.cpp", "obj/archive.o"),
    Compile( "source/archive_maker.cpp", "obj/archive_maker.o"),
    Compile( "source/buffer.cpp", "obj/buffer.o"),
    Compile( "source/server.cpp", "obj/server.o"),
    Compile( "source/proxy.cpp", "obj/proxy.o"),
    Compile( "source/service.cpp", "obj/service.o"),
    Compile( "source/service_protocol.cpp", "obj/service_protocol.o"),
    Compile( "source/archive_log.cpp", "obj/archive_log.o"),
    Compile( "source/xatmi_call.cpp", "obj/xatmi_call.o"),
    Compile( "source/platform.cpp", "obj/platform.o"),
    
    Compile( "source/trace.cpp", "obj/trace.o"),
]

LinkLibrary( "casual-sf",
    casual_sf_objectfiles,
    ["casual-common", "casual-xatmi", "yaml-cpp", "json-c"])


#
# unittest
#
casual_sf_isolated_objectfiles = [
    Compile( "unittest/isolated/source/test_namevaluepair.cpp", "unittest/isolated/obj/test_namevaluepair.o"),
    Compile( "unittest/isolated/source/test_archive.cpp", "unittest/isolated/obj/test_archive.o"),
    Compile( "unittest/isolated/source/test_traits.cpp", "unittest/isolated/obj/test_traits.o"),
    Compile( "unittest/isolated/source/test_yaml_archive.cpp", "unittest/isolated/obj/test_yaml_archive.o"),
    Compile( "unittest/isolated/source/test_json_archive.cpp", "unittest/isolated/obj/test_json_archive.o"),
    Compile( "unittest/isolated/source/test_buffer.cpp", "unittest/isolated/obj/test_buffer.o"),
    Compile( "unittest/isolated/source/test_service.cpp", "unittest/isolated/obj/test_service.o"),
    Compile( "unittest/isolated/source/test_uuid.cpp", "unittest/isolated/obj/test_uuid.o"),
    Compile( "unittest/isolated/source/test_xatmi_call.cpp", "unittest/isolated/obj/test_xatmi_call.o"),
    
    Compile( "unittest/isolated/source/test_vo.cpp", "unittest/isolated/obj/test_vo.o"),
]

LinkIsolatedUnittest( "test-casual-sf-isolated",
	casual_sf_isolated_objectfiles,
	["casual-sf", "casual-xatmi", "casual-common", "json-c", "yaml-cpp"])

#
# Install
#
InstallLibrary("casual-sf", "$CASUAL_HOME/lib/.")

