from casual.make.functiondefinitions import *


Include( "$(CASUAL_BUILD_ENVIRONMENT)")

IncludePaths([
	"include",
	"../common/include",
	"../serviceframework/include",
	"../xatmi/include",
	"../thirdparty/database/include",
	"$(UNITTEST_INCLUDE_PATH)",
	])


LibraryPaths([
	"bin",
    "../common/bin",
    "../xatmi/bin",
    "../serviceframework/bin",
    "$(JSON_LIBRARY_PATH)",
    ])


install_lib = []
install_bin = []


target = LinkLibrary( "bin/casual-monitor-vo",
    [Compile( "source/monitorvo.cpp", "obj/monitorvo.o")],
    ["casual-common",
    "casual-sf"])

install_lib.append( target)

LinkArchive( 'bin/casual-monitor-db',
	[
		Compile( "source/monitordb.cpp", "obj/monitordb.o"),
	])



casual_monitor_objects = [
	Compile( "source/monitor.cpp", "obj/monitor.o"),
	Compile( "source/monitor_main.cpp", "obj/monitor_main.o"),
]

target = LinkExecutable( "bin/casual-monitor",
	casual_monitor_objects,
	[
	'casual-monitor-db',
	"casual-monitor-vo",
	"casual-common",
	"sqlite3"] )

install_bin.append( target)


casual_monitor_request_objects = [
	Compile( "source/statisticserver.cpp", "obj/statisticserver.o"),
	Compile( "source/statisticimplementation.cpp", "obj/statisticimplementation.o"),			
]



target = LinkServer("bin/casual-monitor-request-server",
    casual_monitor_request_objects,
    [
	'casual-monitor-db',
	"casual-monitor-vo",
    "casual-xatmi",
    "casual-common",
    "casual-sf",
    "sqlite3"],
    ["getMonitorStatistics"])

install_bin.append( target)
	
		
#
# unittest
#
LinkIsolatedUnittest( "bin/test-casual-monitor",
	[ Compile( "unittest/isolated/source/test_monitor.cpp", "unittest/isolated/obj/test_monitor.o")],
	[
	'casual-monitor-db',
	"casual-monitor-vo",
	"casual-common",
	"sqlite3"])	

#
# Install
#
Install( install_lib,'$(CASUAL_HOME)/lib')
Install( install_bin,'$(CASUAL_HOME)/bin')


