from casual.make.functiondefinitions import *


Include( "$(CASUAL_BUILD_ENVIRONMENT)")

INCLUDE_PATHS= ["include",
	"../common/include",
	"../serviceframework/include",
	"../xatmi/include",
	"../thirdparty/database/include",
	"$(UNITTEST_INCLUDE_PATH)"]


LIBRARY_PATHS = ["bin",
    "../common/bin",
    "../xatmi/bin",
    "../serviceframework/bin",
    "$(JSON_LIBRARY_PATH)"]

SetIncludePaths( INCLUDE_PATHS)
SetLibraryPaths( LIBRARY_PATHS)

Compile( "source/monitorvo.cpp", "obj/monitorvo.o")

LinkLibrary( "casual-monitor-vo",
    ["obj/monitorvo.o"],
    ["casual-common",
    "casual-sf"])


Compile( "source/monitor.cpp", "obj/monitor.o")
Compile( "source/monitor_main.cpp", "obj/monitor_main.o")
Compile( "source/monitordb.cpp", "obj/monitordb.o")

LinkExecutable( "casual-monitor",
	["obj/monitor.o",
	"obj/monitor_main.o",
	"obj/monitordb.o"],
	["casual-monitor-vo",
	"casual-common",
	"sqlite3"] )


Compile( "source/statisticserver.cpp", "obj/statisticserver.o")
Compile( "source/statisticimplementation.cpp", "obj/statisticimplementation.o")

LinkAtmiServer("casual-monitor-request-server",
    ["obj/statisticserver.o",
    "obj/statisticimplementation.o",
    "obj/monitordb.o"],
    ["casual-monitor-vo",
    "casual-xatmi",
    "casual-common",
    "casual-sf",
    "sqlite3"],
    ["getMonitorStatistics"])

	
	
		
#
# unittest
#
Compile( "unittest/isolated/source/test_monitor.cpp", "unittest/isolated/obj/test_monitor.o")


LinkIsolatedUnittest( "casual-monitor-isolated",
	["unittest/isolated/obj/test_monitor.o",
	"obj/monitordb.o"],
	["casual-monitor-vo",
	"casual-common",
	"sqlite3"])	

#
# Install
#
InstallLibrary("casual-monitor-vo","$CASUAL_HOME/lib/.")
InstallExecutable("casual-monitor","$CASUAL_HOME/bin/.")
InstallExecutable("casual-monitor-request-server","$CASUAL_HOME/bin/.")

