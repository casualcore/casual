from casual.make.directive import *


IncludePaths( [
   '../serviceframework/include',
   '../common/include',
   '../xatmi/include',
   '$(CASUAL_OPTIONAL_INCLUDE_PATHS)',
   ])


LibraryPaths([
    '../serviceframework/bin',
    '../common/bin',
    '../xatmi/bin',
    '$(CASUAL_OPTIONAL_LIBRARY_PATHS)',
    ])


install_lib = []



lib_buffer = LinkLibrary( 'bin/casual-buffer',
    [
     Compile( 'source/string.cpp'),
     Compile( 'source/octet.cpp'),
     Compile( 'source/order.cpp'),
     Compile( 'source/field.cpp'),
    ],
    [
     'casual-common', 'casual-sf'
    ])

install_lib.append( lib_buffer)

#
# Unittest
#
LinkIsolatedUnittest( 'bin/test-buffer',
   [
    Compile( 'unittest/isolated/source/test_field_buffer.cpp'),
    Compile( 'unittest/isolated/source/test_octet_buffer.cpp'),
    Compile( 'unittest/isolated/source/test_order_buffer.cpp'),
    Compile( 'unittest/isolated/source/test_string_buffer.cpp'),
   ],
   [ lib_buffer, 'casual-common', 'casual-xatmi'])  
   
#
# Install
#
Install( install_lib, '$(CASUAL_HOME)/lib')



