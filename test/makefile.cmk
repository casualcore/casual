from casual.make.functiondefinitions import *

Include( '$(CASUAL_BUILD_ENVIRONMENT)')

IncludePaths( ['include',
	'../common/include',
	'../serviceframework/include',
	'../xatmi/include',
	'../queue/include',
	'$(YAML_INCLUDE_PATH)',
    '$(UNITTEST_INCLUDE_PATH)'
    ])
LibraryPaths( [ 'bin',
	'../xatmi/bin',
	'../common/bin',
	'../queue/bin',
	'../buffer/bin',
	'../serviceframework/bin',
	'$(YAML_LIBRARY_PATH)',
	'$(JSON_LIBRARY_PATH)',
	'$(IBM_DB_LIB)'
	])



install_bin = []


LinkArchive( 'bin/sftestproxy', 
	[ 
	   Compile( 'source/sf_testproxy.cpp', 'obj/sf_testproxy.o')
	])






target = LinkServer( 'bin/test',
	[ Compile( 'source/template_server.cpp', 'obj/template_server.o')],
	[ 
		'casual-xatmi', 
		'casual-common', 
		'casual-sf',
		'casual-queue'
	],
	'source/template_server.yaml',
	['rm-mockup', 'casual-queue-rm'])

install_bin.append( target)

#Compile( 'source/template_server_dispatcher.c', 'obj/template_server_dispatcher.o')

#LinkExecutable('test',
#    ['obj/template_server_dispatcher.o',
#    'obj/template_server.o'],
#    ['casual-xatmi', 'casual-common', 'casual-mockup'])	
    	


#
# Compile and link VO:n
#


LinkArchive( 'bin/sf-test-vo',
    [
	   Compile( 'source/sf_testvo.cpp', 'obj/sf_testvo.o')
	])


#
# compile and link the sf-template-server
#


target = LinkServer('bin/sf_test',
    [
	   Compile( 'source/template_sf_server.cpp', 'obj/template_sf_server.o'),
	   Compile( 'source/template_sf_server_implementation.cpp', 'obj/template_sf_server_implementation.o'),
    ],
    [
	'sf-test-vo',
    'casual-xatmi',
    'casual-common',
    'casual-sf'
    ],
	[
    'casual_sf_test1',
    'casual_sf_test2'
    ])

install_bin.append( target)
	


target = LinkExecutable( 'bin/test_client',
	[ 
		Compile( 'source/template_client.cpp', 'obj/template_client.o')
	], 
    ['casual-common', 'casual-xatmi'])
	

install_bin.append( target)


target = LinkExecutable( 'bin/test_multicall_client',
	[
		Compile( 'source/test_multicall.cpp', 'obj/test_multicall.o')
	], ['casual-common', 'casual-xatmi', 'casual-sf'])
	
install_bin.append( target)


target = LinkExecutable( 'bin/test_proxycall_client',
	[ 
		Compile( 'source/test_proxycall.cpp', 'obj/test_proxycall.o')
    ], 
	['casual-sf', 'sftestproxy', 'casual-xatmi'])
	
install_bin.append( target)
#
# unittest
#

LinkIsolatedUnittest( 'unittest/bin/test-casual-generation-isolated',
    [
	   Compile( 'unittest/isolated/source/test_yaml_sf_generation.cpp', 'unittest/isolated/obj/test_yaml_sf_generation.o')
	],
    ['casual-sf', 'casual-xatmi', 'yaml-cpp'])
	
	
#
# Compile and link detoct-generated vo and server
#


LinkServer('bin/sf-detoct-test-server',
    [ 
	   Compile( 'source/sf_testserverserver.cpp', 'obj/sf_testserverserver.o'),
	   Compile( 'source/sf_testserverimplementation.cpp', 'obj/sf_testserverimplementation.o')
	],
    ['sf-test-vo',
    'casual-sf',
    'casual-xatmi'],
    ['casual_sf_test1','casual_sf_test2'])

#
# Install
#
Install( install_bin,'$(CASUAL_HOME)/bin')

	
	
