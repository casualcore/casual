import casual.make.api as make
import casual.middleware.make.api as dsl

import os

make.IncludePaths( ['include',
    '../middleware/common/include',
    '../middleware/serviceframework/include',
    '../middleware/configuration/include',
    '../middleware/domain/include',
    '../middleware/gateway/include',
    '../middleware/service/include',
    '../middleware/xatmi/include',
    '../middleware/queue/include',
    '../middleware/buffer/include']
    + make.optional_include_paths()
    + dsl.paths().include.gtest
   )

make.LibraryPaths( [ 'bin',
    '../middleware/xatmi/bin',
    '../middleware/common/bin',
    '../middleware/domain/bin',
    '../middleware/queue/bin',
    '../middleware/buffer/bin',
    '../middleware/transaction/bin',
    '../middleware/serviceframework/bin',
    '../middleware/configuration/bin',
    '../middleware/http/bin']
    + make.optional_library_paths()
    + dsl.paths().library.gtest
   )



install_bin = []


# mockup string server
target = make.LinkExecutable( 'bin/casual-test-mockup-string-server',
   [
      make.Compile( 'source/mockup/string/server.cpp')
   ],
   ['casual-common', 'casual-xatmi', 'casual-serviceframework'],
)


make.Install( [ target], dsl.paths().install + '/test/bin')

unittest_object = [
    make.Compile( 'unittest/source/domain/test_basic.cpp'),
    make.Compile( 'unittest/source/domain/xatmi/test_call.cpp'),
    make.Compile( 'unittest/source/domain/xatmi/test_start.cpp'),
    make.Compile( 'unittest/source/domain/test_transaction.cpp'),
    make.Compile( 'unittest/source/domain/test_gateway.cpp'),
    make.Compile( 'unittest/source/domain/gateway/test_reverse.cpp'),
    make.Compile( 'unittest/source/domain/test_service.cpp'),
    make.Compile( 'unittest/source/domain/test_assassinate.cpp'),
    
    # disabled... Need a total rework of conversation (and service call/callee also)
    # Compile( 'unittest/source/domain/xatmi/test_conversation.cpp'),
]

# only build http test cases if the enviornment is set up
if "CASUAL_UNITTEST_HTTP_INBOUND_CONFIG" in os.environ and "CASUAL_UNITTEST_HTTP_INBOUND_PATH" in os.environ:
   unittest_object.append( make.Compile( 'unittest/source/domain/test_http.cpp'))

make.LinkUnittest( 'unittest/bin/test-casual',
   unittest_object,
   [ 
      'casual-common', 
      'casual-buffer',
      'casual-xatmi', 
      'casual-queue-api',
      'casual-unittest',
      'casual-mockup-rm',
      'casual-domain-unittest',
      'casual-domain-admin-cli',
      'casual-serviceframework',
   ])
	

# Install
make.Install( install_bin, dsl.paths().install + '/bin')


