from casual.make.functiondefinitions import *
import sys; 
    
IncludePaths( ["include",
    "../common/include",
    "../xatmi/include",
    "../configuration/include",
    "../serviceframework/include",
    "../thirdparty/database/include",
    "$(UNITTEST_INCLUDE_PATH)"])

LibraryPaths( ["bin",
    "../common/bin",
    "../buffer/bin",
    "../configuration/bin",
    "../serviceframework/bin",
    "../xatmi/bin"])

#    $(IBM_DB_LIB)


install_lib = []
install_bin = []

#
# Compile and link the transaction manager
#

manager_archive = LinkArchive( "bin/manager-archive",
     [
    Compile( "source/manager/manager.cpp", 'obj/manager/manager.o'),
    Compile( "source/manager/state.cpp", "obj/manager/state.o"),
    Compile( "source/manager/action.cpp", "obj/manager/action.o"),
    Compile( "source/manager/log.cpp", "obj/manager/log.o"),
    Compile( "source/manager/handle.cpp", "obj/manager/handle.o"),
    Compile( "source/manager/admin/server.cpp", "obj/manager/admin/server.o"),
    Compile( "source/manager/admin/vo/transaction.cpp", "obj/manager/admin/vo/transaction.o"),
    ])
 


target = LinkExecutable( "bin/casual-transaction-manager",
    [
     Compile( "source/manager/main.cpp", "obj/manager/main.o")
    ],
    [ 
      manager_archive, 
     "casual-sf", 
     "casual-common", 
     "casual-configuration", 
     "sqlite3",
     "casual-xatmi",
     ])

install_bin.append( target)


#
# Compile and link resurce-proxy-server lib
#

target = LinkLibrary( "bin/casual-resource-proxy-server",
   [
    Compile( "source/resource/proxy_server.cpp", "obj/resource/proxy_server.o"),
    Compile( "source/resource/proxy.cpp", "obj/resource/proxy.o"),
   ],
   ["casual-common", "casual-sf"])

install_lib.append( target)

#
# unittest
#
unitest_objectfiles = [
    Compile( "unittest/isolated/source/test_configuration.cpp", "unittest/isolated/obj/test_configuration.o"),
    Compile( "unittest/isolated/source/test_transactionlog.cpp", "unittest/isolated/obj/test_transactionlog.o"),
    Compile( "unittest/isolated/source/test_manager.cpp", "unittest/isolated/obj/test_manager.o"),
];

LinkIsolatedUnittest( "bin/test-casual-transaction",
    unitest_objectfiles,
    [ 
     manager_archive, 
     "casual-common", 
     "casual-sf", 
     "casual-configuration", 
     "sqlite3", 
     "casual-mockup",
     "casual-xatmi",
     "casual-mockup-unittest-environment"
     ])


#
# Mockup resource proxy
#
target = LinkExecutable( "bin/rm-proxy-casual-mockup",
    [ Compile( "source/resource/template_build_resource_proxy.c", "obj/resource/template_build_resource_proxy.o")],
    [ "casual-mockup-rm", "casual-resource-proxy-server"])


install_bin.append( target)

Install( install_bin,'$(CASUAL_HOME)/bin')
Install( install_lib,'$(CASUAL_HOME)/lib')


