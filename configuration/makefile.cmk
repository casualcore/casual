from casual.make.functiondefinitions import *

Include( "$(CASUAL_BUILD_ENVIRONMENT)")

IncludePaths([
   "include",
   "../common/include",
   "../xatmi/include",
   "../serviceframework/include",
   "$(JSON_INCLUDE_PATH)",
   "$(UNITTEST_INCLUDE_PATH)",
   ])


LibraryPaths([
    "bin",
    "../common/bin",
    "../xatmi/bin",
    "../serviceframework/bin",
    "$(JSON_LIBRARY_PATH)",
    ])

intall_libs = []

casual_configuration_objectfiles = [
    Compile( "source/file.cpp", "obj/file.o"),
    Compile( "source/domain.cpp", "obj/domain.o"),
    Compile( "source/xa_switch.cpp", "obj/xa_switch.o"),
    Compile( "source/serverdefinition.cpp", "obj/serverdefinition.o"),
    Compile( "source/queue.cpp", "obj/queue.o")
]

intall_libs.append( 

LinkLibrary( "bin/casual-configuration",
    casual_configuration_objectfiles,
    ["casual-common",
    "casual-sf"])
)


#
# Unittest
#
test_configuration_objectfiles = [
    Compile( "unittest/isolated/source/test_domain.cpp", "obj/test_domain.o"),
    Compile( "unittest/isolated/source/test_xa_switch.cpp", "obj/test_xa_switch.o"),
    Compile( "unittest/isolated/source/test_queue.cpp", "obj/test_queue.o"),
]

LinkIsolatedUnittest( "bin/test-casual-configuration",
   test_configuration_objectfiles,
   ["casual-configuration", "casual-sf"])  
   
#
# Install
#
Install( intall_libs, '$(CASUAL_HOME)/lib')
Install( 'resources.yaml', '$(CASUAL_HOME)/configuration')


