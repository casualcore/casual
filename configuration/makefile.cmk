from casual.make.directive import *

Include( '$(CASUAL_BUILD_ENVIRONMENT)')

IncludePaths([
   'include',
   '../common/include',
   '../xatmi/include',
   '../serviceframework/include',
   '$(JSON_INCLUDE_PATH)',
   '$(UNITTEST_INCLUDE_PATH)',
   ])


LibraryPaths([
    'bin',
    '../common/bin',
    '../xatmi/bin',
    '../serviceframework/bin',
    '$(JSON_LIBRARY_PATH)',
    ])

intall_libs = []


lib_configuration = LinkLibrary( 'bin/casual-configuration',
    [
        Compile( 'source/file.cpp'),
        Compile( 'source/domain.cpp'),
        Compile( 'source/xa_switch.cpp'),
        Compile( 'source/serverdefinition.cpp'),
        Compile( 'source/queue.cpp')
    ],
    ['casual-common',
    'casual-sf'])


intall_libs.append( lib_configuration)

#
# Unittest
#

LinkIsolatedUnittest( 'bin/test-casual-configuration',
   [
        Compile( 'unittest/isolated/source/test_domain.cpp'),
        Compile( 'unittest/isolated/source/test_xa_switch.cpp'),
        Compile( 'unittest/isolated/source/test_queue.cpp'),
   ],
   [ lib_configuration, 'casual-sf'])  
   
#
# Install
#
Install( intall_libs, '$(CASUAL_HOME)/lib')
Install( 'resources.yaml', '$(CASUAL_HOME)/configuration')


