#!groovy

def fetch_repo( repository, branch, directory)
{
   checkout([
       $class: 'GitSCM', 
       branches: [[name: branch]], 
       doGenerateSubmoduleConfigurations: false, 
       extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: directory]], 
       submoduleCfg: [], 
       userRemoteConfigs: [[credentialsId: env.API_KEY, url: repository]]
   ])
}

def build( name, image)
{
   def current_dir = pwd()
   writeFile file: 'casual/builder.sh', text: '''#! /bin/sh
cd /git/casual
casual-make make && casual-make clean && casual-make compile && casual-make link 
ISOLATED_UNITTEST_DIRECTIVES="--gtest_output='xml:report.xml'" casual-make test
casual-make install
tar cvf /git/casual/casual.tar /usr/local/casual
casual-make clean
chmod a+w -R .
'''

   sh """
   chmod +x casual/builder.sh
   if docker ps -a | grep $name; then docker rm $name;fi
   docker run --name $name -v $current_dir/casual:/git/casual $image
   """
} 

node {

   stage('Build/Unittest Ubuntu') {

       bitbucketStatusNotify: buildState: 'IN PROGRESS', buildKey: 'ubuntu', buildName: 'ubuntu'

       build( 'ubuntucompile', 'casual/ubuntu')

       step([$class: 'XUnitBuilder',
          thresholds: [[$class: 'FailedThreshold', failureThreshold: '1']],
          tools: [[$class: 'GoogleTestType', pattern: '**/report.xml']]])

       archive includes: '**/casual.log' 
       archive includes: 'casual/casual.tar' 

       bitbucketStatusNotify: currentBuild.result, buildKey: 'ubuntu', buildName: 'ubuntu'
   }

}
