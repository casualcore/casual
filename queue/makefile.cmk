from casual.make.functiondefinitions import *



SetIncludePaths( [ 
    'include',
    '../common/include',
    '../configuration/include',
    '../serviceframework/include', 
    '../thirdparty/database/include',
    '../xatmi/include',
    '$(UNITTEST_INCLUDE_PATH)'
    ]);


SetLibraryPaths( [ 
        'bin',
        '../configuration/bin',
        '../common/bin',
    ]);
    
 

casual_queue_server_libraries = [
    'casual-common',
     'sqlite3',
  ];
    


casual_queue_server_archive_objs = [
   Compile( 'source/server/server.cpp', 'obj/server/server.o'),
   Compile( 'source/server/database.cpp', 'obj/server/database.o'),
   Compile( 'source/server/handle.cpp', 'obj/server/handle.o')
];

casual_queue_server_libraries.append( 

LinkArchive( 'casual-queue-server-archive',
    casual_queue_server_archive_objs
    )
);

LinkExecutable( 'casual-queue-server', 
    [Compile( 'source/server/main.cpp', 'obj/server/main.o')], 
    casual_queue_server_libraries);
     
 
 
 
#
# Broker
#

casual_queue_broker_archive_objs = [
   Compile( 'source/broker/broker.cpp', 'obj/broker/broker.o'),
   Compile( 'source/broker/handle.cpp', 'obj/broker/handle.o'),
];

LinkArchive( 'casual-queue-broker-archive',
    casual_queue_broker_archive_objs
    )

LinkExecutable( 'casual-queue-broker', 
    [Compile( 'source/broker/main.cpp', 'obj/broker/main.o')], 
    ["casual-queue-broker-archive"]);

 
     

#
# Unittest
#
casual_queue_unittest_objs = [
  Compile( 'unittest/isolated/source/test_server_database.cpp', 'obj/unittest/test_server_database.o'),
  ];

LinkIsolatedUnittest( 'test-casual-queue', 
    casual_queue_unittest_objs,
    casual_queue_server_libraries  
);


