import casual.make.api as make
import casual.middleware.make.api as dsl


make.IncludePaths( ['include',
    '../common/include',
    '../xatmi/include',
    '../configuration/include',
    '../serviceframework/include',
    '../domain/include',
    '../service/include',
    '../cli/include'] + 
    make.optional_include_paths()
   )

make.LibraryPaths( ['bin',
    '../buffer/bin',
    '../common/bin',
    '../xatmi/bin',
    '../configuration/bin',
    '../serviceframework/bin',
    '../domain/bin',
    '../service/bin',
    '../cli/bin'] + 
    make.optional_library_paths()
   )


install_bin = []
install_lib = []



service_cli = make.LinkLibrary( 'bin/casual-tools-service-cli',
   [ 
        make.Compile( 'source/service/describe/cli.cpp'),
        make.Compile( 'source/service/call/cli.cpp')],
   [
        'casual-cli',
        'casual-tools-common',
        'casual-service-admin-api',
        'casual-common', 
        'casual-serviceframework',
        'casual-domain-utility',
        'casual-xatmi',
    ])

install_lib.append( service_cli)



make.Install( install_bin,  dsl.paths().install + '/bin')
make.Install( install_lib,  dsl.paths().install + '/lib')



