import casual.make.api as make
import casual.middleware.make.api as dsl

make.IncludePaths([
   'include',
   '../common/include',
   '../xatmi/include',
   '../serviceframework/include']
    + make.optional_include_paths()
    + dsl.paths().include.gtest
    )


make.LibraryPaths([
    'bin',
    '../common/bin',
    '../serviceframework/bin',
    '../xatmi/bin']
    + make.optional_library_paths()
    + dsl.paths().library.gtest
   )

install_libs = []


lib_configuration = make.LinkLibrary( 'bin/casual-configuration',
    [
        make.Compile( 'source/common.cpp'),
        make.Compile( 'source/user.cpp'),
        make.Compile( 'source/model.cpp'),
        make.Compile( 'source/system.cpp'),
        make.Compile( 'source/group.cpp'),
        make.Compile( 'source/user/environment.cpp'),
        make.Compile( 'source/model/transform.cpp'),
        make.Compile( 'source/model/load.cpp'),
        make.Compile( 'source/model/validate.cpp'),
        
        make.Compile( 'source/build/model.cpp'),
        make.Compile( 'source/build/model/load.cpp'),
      
    ],
    ['casual-common',
    'casual-serviceframework'])


install_libs.append( lib_configuration)


target = make.LinkLibrary( 'bin/casual-configuration-cli',
   [
      make.Compile( 'source/admin/cli.cpp'),
   ],
   [
      lib_configuration,
      'casual-common'
   ]
)
install_libs.append( target)


example_archive = make.LinkArchive( 'bin/casual-configuration-example', 
     [
         make.Compile( 'source/example/model.cpp'),
         make.Compile( 'source/example/build/model.cpp'),
     ])

# Unittest
make.LinkUnittest( 'bin/test-casual-configuration',
   [
        make.Compile( 'unittest/source/test_model.cpp'),
        make.Compile( 'unittest/source/test_environment.cpp'),
        make.Compile( 'unittest/source/test_group.cpp'),
        
        make.Compile( 'unittest/source/test_build.cpp'),
        make.Compile( 'unittest/source/user/test_validate.cpp'),

        make.Compile( 'unittest/source/user/test_backward.cpp'),
        make.Compile( 'unittest/source/model/test_validate.cpp'),
        make.Compile( 'unittest/source/model/test_system.cpp'),
   ],
   [ 
       example_archive, 
       lib_configuration, 
       'casual-serviceframework', 
       'casual-common', 
       'casual-unittest',
   ])  

# Example maker
make.LinkExecutable( 'bin/casual-configuration-documentation', 
    [ 
        make.Compile( 'source/documentation/main.cpp'),
   ],          
   [ 
      example_archive, 
      lib_configuration,  
      'casual-common'
   ])  



# Install
make.Install( install_libs,  dsl.paths().install + '/lib')
make.Install( 'resources.yaml',  dsl.paths().install + '/configuration/example')


