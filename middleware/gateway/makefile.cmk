from casual.middleware.make.dsl import *



IncludePaths([
   'include',
   '../common/include',
   '../configuration/include',
   '../domain/include',
   '../service/include',
   '../xatmi/include',
   '../serviceframework/include',
   '$(CASUAL_OPTIONAL_INCLUDE_PATHS)',
   ])


LibraryPaths([
   'bin',
   '../common/bin',
   '../configuration/bin',
   '../domain/bin',
   '../service/bin',
   '../serviceframework/bin',
   '../xatmi/bin',
   '../queue/bin',
   '$(CASUAL_OPTIONAL_LIBRARY_PATHS)',
])


install_lib = []
install_bin = []
install_example_bin = []
install_headers = []


common_archive = LinkArchive( 'bin/casual-gateway-common',
    [
        Compile( 'source/environment.cpp'),
        Compile( 'source/outbound/error/reply.cpp'),
        Compile( 'source/inbound/buffer.cpp'),
        Compile( 'source/transform.cpp'),
        Compile( 'source/manager/listen.cpp'),
        Compile( 'source/common.cpp'),
    ])
        

# The gateway-manager
target = LinkExecutable( 'bin/casual-gateway-manager',
    [
        Compile( 'source/manager/main.cpp'),
        Compile( 'source/manager/manager.cpp'),
        Compile( 'source/manager/handle.cpp'),
        Compile( 'source/manager/state.cpp'),
        Compile( 'source/manager/admin/server.cpp'),
    ],
    [ 
        common_archive,
        'casual-serviceframework', 
        'casual-common', 
        'casual-configuration', 
    ])

install_bin.append( target)

target = LinkLibrary( 'bin/casual-gateway-admin-cli',
    [
        Compile( 'source/manager/admin/cli.cpp'),
    ],
    [
        common_archive,
        'casual-serviceframework', 
        'casual-common', 
    ])

install_lib.append( target)

# The outbound tcp connector
target = LinkExecutable( 'bin/casual-gateway-outbound',
    [
        Compile( 'source/outbound/main.cpp'),
    ],
    [
        common_archive, 
        'casual-common',  
    ])
     
install_bin.append( target)

# The inbound tcp connector
target = LinkExecutable( 'bin/casual-gateway-inbound',
[
    Compile( 'source/inbound/main.cpp'),
],
[
    common_archive, 
    'casual-common', 
])

install_bin.append( target)



# Unittest

target_unittest = LinkUnittest( 'bin/test-casual-gateway',
   [
        Compile( 'unittest/source/test_manager.cpp'),
   ], 
   [ 
       common_archive, 
       'casual-serviceframework', 
       'casual-common', 
       'casual-unittest',
       'casual-domain-unittest',
       'casual-service-unittest'
    ]) 

# Make sure we link the executables before we run the unittest
Dependencies( target_unittest, install_bin)

# protocol example
protocol_objects = [
    Compile( 'source/documentation/protocol/example.cpp')
]



target = LinkExecutable( "bin/casual-gateway-markdown-protocol",
    [
        Compile( 'source/documentation/protocol/markdown.cpp')
    ] + protocol_objects,
    [
        'casual-common'
    ])

install_example_bin.append( target)

target = LinkExecutable( "bin/casual-gateway-binary-protocol",
    [
        Compile( 'source/documentation/protocol/binary.cpp')
    ] + protocol_objects,
    [
        'casual-common'
    ])

install_example_bin.append( target)


Install( install_example_bin,'$(CASUAL_HOME)/example/bin')
Install( install_bin,'$(CASUAL_HOME)/bin')
Install( install_lib,'$(CASUAL_HOME)/lib')
Install( install_headers,'$(CASUAL_HOME)/include')




