@startuml

title gateway startup


box "domain A" #LightBlue
   actor "client" as CA
   participant "domain manager" as DMA
   participant "service manager" as BA
   participant "Server A" as SA
   participant "gateway manager" as GA
   participant "outbound" as OA
   
end box

box "domain B"
   participant "inbound" as IB
   participant "gateway manager" as GB 
   participant "Server B" as SB
   participant "service manager" as BB
   participant "domain manager" as DMB
   actor "client" as CB
end box


group startup
CA -> DMA: boot

activate DMA

DMA -> BA: spawn service manager
activate BA
BA -> DMA: Type::domain_process_connect_request
DMA -> BA: Type::domain_process_connect_reply
BA -> DMA: Type::domain_configuration_request
DMA -> BA: Type::domain_configuration_reply
deactivate BA

DMA -> SA: spawn Server A
activate SA
SA -> DMA: Type::domain_process_connect_request
DMA -> SA: Type::domain_process_connect_reply
SA -> DMA: Type::domain_server_configuration_request
DMA -> SA: Type::domain_server_configuration_reply
deactivate SA
DMA -> GA: spawn gateway A

activate GA
GA -> DMA: Type::domain_process_connect_request
DMA -> GA: Type::domain_process_connect_reply
GA -> DMA: Type::domain_configuration_request
DMA -> GA: Type::domain_configuration_reply

deactivate DMA

GA -> OA: spawn outbound (B)
OA -> OA: try connect to B

deactivate GA

deactivate DMA
end


group startup
CB -> DMB: boot

activate DMB

DMB -> SB: spawn Server B
activate SB
SB -> DMB: Type::domain_process_connect_request
DMB -> SB: Type::domain_process_connect_reply
SB -> DMB: Type::domain_server_configuration_request
DMB -> SB: Type::domain_server_configuration_reply
deactivate SB

DMB -> GB: spawn gateway B

activate GB
GB -> DMB: Type::domain_process_connect_request
DMB -> GB: Type::domain_process_connect_reply
GB -> DMB: Type::domain_configuration_request
DMB -> GB: Type::domain_configuration_reply


deactivate DMB

GB -> GB: spawn listener (thread)
activate GB

deactivate DMB



OA -> GB: connection established (socket X)
activate OA



GB -> IB: spawn inbound (socket X)
activate IB
deactivate GB
deactivate IB



OA -> IB: Type::gateway_domain_connect_request
note left
contains domain name and id of A, and  all protocol versions 
that domain A can speak
end note

activate IB
IB -> OA : Type::gateway_domain_connect_reply
note right
contains domain name and id of B, and the chosen protocol version
(or invalid if no compatible protocol could be found)
end note

IB -> GB: Type::gateway_inbound_connect
deactivate IB

OA -> GA: Type::gateway_outbound_connect
note left
Give gateway manager information about the connection
end note


OA -> IB: Type::gateway_domain_discover_request
note left
outbound asks the other domain 
if it got some of the provided 
services and queues.
During startup, this is the configured 
services and queues. During runtime this is
absent requested services or queues.
end note

activate IB
IB -> GB: Type::gateway_domain_discover_request

GB -> BB: Type::gateway_domain_discover_request
activate BB
BB -> GB: Type::gateway_domain_discover_reply
deactivate BB

GB ->IB: Type::gateway_domain_discover_accumulated_reply

IB -> OA: Type::gateway_domain_discover_reply

deactivate IB

OA -> BA: Type::gateway_domain_advertise
note right 
	outbound advertises the services that the
	other domain replied with
end note

deactivate OA

deactivate DMB

deactivate GB
end


deactivate BB



@enduml
