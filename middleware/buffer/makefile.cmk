from casual.middleware.make.dsl import *

IncludePaths( [
   'include',
   '../serviceframework/include',
   '../common/include',
   '../xatmi/include',
   '$(CASUAL_OPTIONAL_INCLUDE_PATHS)',
   ])


LibraryPaths([
    'bin',
    '../serviceframework/bin',
    '../common/bin',
    '../xatmi/bin',
    '$(CASUAL_OPTIONAL_LIBRARY_PATHS)',
    ])


install_lib = []
install_bin = []
install_headers = []

lib_buffer = LinkLibrary( 'bin/casual-buffer',
    [
     Compile( 'source/field.cpp'),
     Compile( 'source/octet.cpp'),
     Compile( 'source/order.cpp'),
     Compile( 'source/string.cpp'),
     
     Compile( 'source/common.cpp'),
     Compile( 'source/internal/field/string.cpp'),
    ],
    [
     'casual-common', 'casual-serviceframework'
    ])

install_lib.append( lib_buffer)

install_headers += [ 
   ( 'include/casual/buffer/field.h', 'casual/buffer'),
   ( 'include/casual/buffer/octet.h', 'casual/buffer'),
   ( 'include/casual/buffer/order.h', 'casual/buffer'),
   ( 'include/casual/buffer/string.h', 'casual/buffer'),
   ( 'include/casual/buffer/internal/field/string.h', 'casual/buffer/internal/field'),
]

casual_field_make_header = LinkExecutable( 'bin/casual_field_make_header', 
    [
     Compile( 'tools/source/field.cpp'),
    ], 
    [ 
     'casual-common', 
     'casual-serviceframework', 
      lib_buffer
    ])


install_bin.append( casual_field_make_header)


# Unittest
LinkUnittest( 'bin/test-buffer',
   [
    Compile( 'unittest/source/test_field_buffer.cpp'),
    Compile( 'unittest/source/test_octet_buffer.cpp'),
    Compile( 'unittest/source/test_order_buffer.cpp'),
    Compile( 'unittest/source/test_string_buffer.cpp'),
    Compile( 'unittest/source/test_field_stream.cpp'),
    Compile( 'unittest/source/internal/field/test_string.cpp'),
    Compile( 'unittest/source/internal/field/test_table.cpp'),
   ],
   [ 
    lib_buffer, 'casual-common', 'casual-xatmi', 'casual-unittest'
   ])  
   
# Sample
exe_field_sample = LinkExecutable( 'bin/casual_buffer_protocol_sample',
    [
     Compile( 'sample/protocol/source/field.cpp'),
    ],
    [
     lib_buffer, 'casual-xatmi', 'casual-common'
    ])
    
    

lib_casual_buffer_sample = LinkLibrary( 'bin/casual_buffer_sample',
    [
     Compile( 'sample/client/source/field.cpp'),
     Compile( 'sample/client/source/octet.cpp'),
     Compile( 'sample/client/source/order.cpp'),
     Compile( 'sample/client/source/string.cpp'),
    ],
    [
     lib_buffer, 'casual-xatmi'
    ])


binary = LinkExecutable( 'bin/casual-buffer-field-from-human', 
    [
     Compile( 'tools/source/field/from_human.cpp'),
    ], 
    [ 
     'casual-common', 
      lib_buffer
    ])
    
install_bin.append( binary)


binary = LinkExecutable( 'bin/casual-buffer-field-to-human', 
    [
     Compile( 'tools/source/field/to_human.cpp'),
    ], 
    [ 
     'casual-common', 
      lib_buffer
    ])
    
install_bin.append( binary)

binary = LinkExecutable( 'bin/casual-buffer-duplicate', 
    [
     Compile( 'tools/source/duplicate.cpp'),
    ], 
    [ 
     'casual-common', 
    ])
    
install_bin.append( binary)


binary = LinkExecutable( 'bin/casual-buffer-generic-compose', 
    [
     Compile( 'tools/source/generic/compose.cpp'),
    ], 
    [ 
     'casual-common', 
    ])
    
install_bin.append( binary)

binary = LinkExecutable( 'bin/casual-buffer-generic-extract', 
    [
     Compile( 'tools/source/generic/extract.cpp'),
    ], 
    [ 
     'casual-common', 
    ])
    
install_bin.append( binary)

binary = LinkExecutable( 'bin/casual-buffer-field-serialize', 
    [
     Compile( 'tools/source/field/serialize.cpp'),
    ], 
    [ 
     'casual-common',
     lib_buffer
    ])
    
install_bin.append( binary)

# Install
Install( install_lib, '$(CASUAL_HOME)/lib')
Install( install_bin, '$(CASUAL_HOME)/bin')
Install( install_headers, '$(CASUAL_HOME)/include')



