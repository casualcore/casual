from casual.middleware.make.dsl import *

IncludePaths( [
   '../serviceframework/include',
   '../common/include',
   '../xatmi/include',
   '$(CASUAL_OPTIONAL_INCLUDE_PATHS)',
   ])


LibraryPaths([
    '../serviceframework/bin',
    '../common/bin',
    '../xatmi/bin',
    '$(CASUAL_OPTIONAL_LIBRARY_PATHS)',
    ])


install_lib = []
install_include = []


lib_buffer = LinkLibrary( 'bin/casual-buffer',
    [
     Compile( 'source/field.cpp'),
     Compile( 'source/octet.cpp'),
     Compile( 'source/order.cpp'),
     Compile( 'source/string.cpp'),
    ],
    [
     'casual-common', 'casual-sf'
    ])

install_lib.append( lib_buffer)
install_include.append( 'include/buffer/field.h')
install_include.append( 'include/buffer/octet.h')
install_include.append( 'include/buffer/order.h')
install_include.append( 'include/buffer/string.h')

install_bin = []

casual_field_make_header = LinkExecutable( 'bin/casual_field_make_header', 
    [
     Compile( 'tools/source/field.cpp'),
    ], 
    [ 
     'casual-common', 
     'casual-sf', 
      lib_buffer
    ])


install_bin.append( casual_field_make_header)




#
# Unittest
#
LinkUnittest( 'bin/test-buffer',
   [
    Compile( 'unittest/isolated/source/test_field_buffer.cpp'),
    Compile( 'unittest/isolated/source/test_octet_buffer.cpp'),
    Compile( 'unittest/isolated/source/test_order_buffer.cpp'),
    Compile( 'unittest/isolated/source/test_string_buffer.cpp'),
   ],
   [ 
    lib_buffer, 'casual-common', 'casual-xatmi', 'casual-unittest'
   ])  
   



#
# Sample
#

lib_casual_buffer_sample = LinkLibrary( 'bin/casual_buffer_sample',
    [
     Compile( 'sample/client/source/field.c'),
     Compile( 'sample/client/source/octet.c'),
     Compile( 'sample/client/source/order.c'),
     Compile( 'sample/client/source/string.c'),
    ],
    [
     lib_buffer, 'casual-xatmi'
    ])


#
# Install
#
Install( install_lib, '$(CASUAL_HOME)/lib')
Install( install_include, '$(CASUAL_HOME)/include/buffer')



