import casual.make.api as make
import casual.middleware.make.api as dsl


make.IncludePaths([
    'include',
    '../common/include',
    '../xatmi/include',
    '../buffer/include',
    '../domain/include']
    + make.optional_include_paths()
    + dsl.paths().include.gtest
   )


make.LibraryPaths([
    'bin',
    '../common/bin',
    '../buffer/bin',
    '../xatmi/bin',
    '../domain/bin',
    '../configuration/bin',
    '../serviceframework/bin']
    + make.optional_library_paths()
    + dsl.paths().library.gtest
   )


install_lib = []
install_bin = []
install_headers = []

common_archive = make.LinkArchive( 'bin/casual-http-common',
    [
       make.Compile( 'source/common.cpp'),
     ])

common_outbound_archive = make.LinkArchive( 'bin/casual-http-outbound-common',
    [
       make.Compile( 'source/outbound/configuration.cpp'),
       make.Compile( 'source/outbound/curl.cpp'),
       make.Compile( 'source/outbound/transform.cpp'),
       make.Compile( 'source/outbound/state.cpp'),
       make.Compile( 'source/outbound/request.cpp'),
     ])

common_inbound_library = make.LinkLibrary( 'bin/casual-http-inbound-common',
   [
       make.Compile( 'source/inbound/caller.cpp')
   ],
   [
       'casual-buffer', 
       'casual-xatmi',
       'casual-common',
       common_archive
   ])

install_lib.append( common_inbound_library)

target = make.LinkExecutable( 'bin/casual-http-outbound',
   [
      make.Compile( 'source/outbound/main.cpp'),
      make.Compile( 'source/outbound/manager.cpp'),
   ],
   [ 
      common_outbound_archive,
      common_archive,
      'casual-common', 
      'curl'
   ])

install_bin.append( target)

# Unittest
make.LinkUnittest( 'unittest/bin/test-http',
   [
    make.Compile( 'unittest/source/outbound/test_model.cpp'),
    make.Compile( 'unittest/source/outbound/test_transcode.cpp'),
    make.Compile( 'unittest/source/outbound/test_state.cpp'),
    make.Compile( 'unittest/source/test_outbound.cpp'),
   ],
   [ 
      common_outbound_archive, 
      common_archive,
      'casual-common',
      'casual-domain-unittest',
      'casual-unittest',
      'casual-xatmi',
      'curl'
   ])  
   


make.Install( install_bin, dsl.paths().install + '/bin')
make.Install( install_lib, dsl.paths().install + '/lib')
make.Install( install_headers, dsl.paths().install + '/include')




