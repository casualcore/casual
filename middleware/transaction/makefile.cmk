from casual.middleware.make.dsl import *
    
IncludePaths( ['include',
    '../common/include',
    '../xatmi/include',
    '../configuration/include',
    '../serviceframework/include',
    '../../thirdparty/database/include',
    '$(CASUAL_OPTIONAL_INCLUDE_PATHS)',
    ])

LibraryPaths( ['bin',
    '../common/bin',
    '../buffer/bin',
    '../configuration/bin',
    '../serviceframework/bin',
    '../xatmi/bin',
    '$(CASUAL_OPTIONAL_LIBRARY_PATHS)',
     ])

#    $(IBM_DB_LIB)


install_lib = []
install_bin = []
install_headers = []

#
# Compile and link the transaction manager
#

manager_archive = LinkArchive( 'bin/manager-archive',
     [
    Compile( 'source/manager/manager.cpp'),
    Compile( 'source/manager/state.cpp'),
    Compile( 'source/manager/action.cpp'),
    Compile( 'source/manager/log.cpp'),
    Compile( 'source/manager/handle.cpp'),
    Compile( 'source/manager/admin/server.cpp'),
    Compile( 'source/manager/admin/transform.cpp'),
    Compile( 'source/common.cpp'),
    ])
 


target = LinkExecutable( 'bin/casual-transaction-manager',
    [
     Compile( 'source/manager/main.cpp')
    ],
    [ 
      manager_archive, 
     'casual-sf', 
     'casual-common', 
     'casual-configuration', 
     'sqlite3',
     'casual-xatmi',
     ])

install_bin.append( target)


target = LinkExecutable( 'bin/casual-transaction-admin',
    [
     Compile( 'source/manager/admin/client.cpp')
    ],
    [ 
      manager_archive, 
     'casual-sf', 
     'casual-common',
     ])


Install( target, '$(CASUAL_HOME)/internal/bin')

#
# Compile and link resurce-proxy-server lib
#

target = LinkLibrary( 'bin/casual-resource-proxy-server',
   [
    Compile( 'source/resource/proxy_server.cpp'),
    Compile( 'source/resource/proxy.cpp'),
   ],
   ['casual-common', 'casual-sf'])

install_lib.append( target)

install_headers.append( 'include/transaction/resource/proxy_server.h')


#
# Mockup resource proxy
#
target = LinkExecutable( 'bin/rm-proxy-casual-mockup',
    [ Compile( 'source/resource/template_build_resource_proxy.cpp')],
    [ 'casual-mockup-rm', 'casual-resource-proxy-server'])


install_bin.append( target)


#
# unittest
#
 
LinkUnittest( 'bin/test-casual-transaction',
    [
        Compile( 'unittest/isolated/source/test_admin.cpp'),
        Compile( 'unittest/isolated/source/test_configuration.cpp'),
        Compile( 'unittest/isolated/source/test_log.cpp'),
        Compile( 'unittest/isolated/source/test_manager.cpp'),
        
    ],
    [ 
     manager_archive, 
     'casual-common', 
     'casual-sf', 
     'casual-configuration', 
     'sqlite3', 
     'casual-mockup',
     'casual-mockup-rm',
     'casual-xatmi',
     'casual-mockup-unittest-environment',
     'casual-unittest',
     ])


Install( install_bin,'$(CASUAL_HOME)/bin')
Install( install_lib,'$(CASUAL_HOME)/lib')
Install( install_headers,'$(CASUAL_HOME)/include')




