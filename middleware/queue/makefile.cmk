from casual.middleware.make.dsl import *


IncludePaths( [ 
    'include',
    '../common/include',
    '../configuration/include',
    '../serviceframework/include', 
    '../xatmi/include',
    '../transaction/include',
    '../domain/include',
    '../../thirdparty/database/include',
    '$(CASUAL_OPTIONAL_INCLUDE_PATHS)',
])


LibraryPaths( [ 
    'bin',
    '../transaction/bin',
    '../configuration/bin',
    '../serviceframework/bin',
    '../common/bin',
    '../buffer/bin',
    '../domain/bin',
    '../xatmi/bin',
    '$(CASUAL_OPTIONAL_LIBRARY_PATHS)',
])
    



install_lib = []
install_bin = []

# So we get the local build-rm
Environment( 'PATH', '../tools/bin:$(PATH)')

# Common stuff

common = LinkLibrary( 'bin/casual-queue-common',
   [
    Compile( 'source/common/log.cpp'),
    Compile( 'source/common/transform.cpp'),
    Compile( 'source/common/queue.cpp'),
   ],
   [ 'casual-common', ])
 
install_lib.append( common)

# Group

group_archive = LinkArchive( 'bin/casual-queue-group-archive',
    [
   Compile( 'source/group/group.cpp'),
   Compile( 'source/group/database.cpp'),
   Compile( 'source/group/handle.cpp')
])


queue_group = LinkExecutable( 'bin/casual-queue-group', 
    [Compile( 'source/group/main.cpp')], 
    [
     group_archive,
     common,
     'casual-domain-pending-message',
     'casual-common',
     'sqlite3',
     ])
     
 
install_bin.append( queue_group)
 
# Manager

manager_archive = LinkArchive( 'bin/casual-queue-manager-archive',
   [
     Compile( 'source/manager/handle.cpp'),
     Compile( 'source/manager/manager.cpp'),
     Compile( 'source/manager/state.cpp'),
     Compile( 'source/manager/admin/server.cpp'),
   ])


queue_manager = LinkExecutable( 'bin/casual-queue-manager', 
    [
      Compile( 'source/manager/main.cpp'),
    ], 
    [ 
     manager_archive,
     common,
     'casual-common', 
     'casual-configuration', 
     'casual-serviceframework', 
     ])


install_bin.append( queue_manager)



queue_api = LinkLibrary( 'bin/casual-queue-api', 
   [
       Compile( 'source/api/queue.cpp'),
   ],
   [
    common, 
    'casual-serviceframework', 
    'casual-common', 
    ])

install_lib.append( queue_api)





# Forwards

forward_common = LinkArchive( 'bin/casual-queue-forward-common',
    [
       Compile( 'source/forward/common.cpp'),
    ])

forward_service = LinkExecutable( 'bin/casual-queue-forward-service',
    [
        Compile( 'source/forward/service.cpp'),
    ],
    [ forward_common, common, queue_api, 'casual-common', 'casual-buffer', 'casual-serviceframework'])

forward_queue = LinkExecutable( 'bin/casual-queue-forward-queue',
    [
        Compile( 'source/forward/queue.cpp'),
    ],
    [ forward_common, common, queue_api, 'casual-common', 'casual-buffer'])

install_bin.append( forward_service)
install_bin.append( forward_queue)


# Client
target = LinkLibrary( 'bin/casual-queue-admin-cli', 
    [
        Compile( 'source/manager/admin/cli.cpp'),
     ], 
   [common, queue_api, 'casual-common', 'casual-serviceframework'])
 
install_lib.append( target)


# Unittest

test_casual_queue = LinkUnittest( 'unittest/bin/test-casual-queue', 
    [
     Compile( 'unittest/source/test_transform.cpp'),
     #Compile( 'unittest/source/manager/test_handle.cpp'),
     Compile( 'unittest/source/group/test_database.cpp'),
     Compile( 'unittest/source/test_queue.cpp'),
    ],
    [
     group_archive,
     manager_archive,
     common,
     queue_api,
     'casual-common',
     'casual-serviceframework',
     'casual-configuration',
     'sqlite3',
     'casual-unittest',
     'casual-domain-unittest',
     
     ]  
)

# Make sure the executables is linked before unittest
Dependencies( test_casual_queue, [ queue_manager, queue_group])



Install( install_lib, '$(CASUAL_HOME)/lib')
Install( install_bin, '$(CASUAL_HOME)/bin')



