import casual.make.api as make
import casual.middleware.make.api as dsl
import os

make.IncludePaths( ['server/include',
    '../xatmi/include',
    '../common/include',
    '../domain/unittest/include',
    '../serviceframework/include']
    + make.optional_include_paths()
    + dsl.paths().include.gtest
    )


library_paths = [ 'server/bin',
    '../common/bin',
    '../buffer/bin',
    '../configuration/bin',
    '../domain/bin',
    '../gateway/bin',
    '../service/bin',
    '../serviceframework/bin',
    '../xatmi/bin'] + make.optional_library_paths() + dsl.paths().library.gtest


make.LibraryPaths( library_paths)

install_bin = []

casual_middleware_path = make.source_root() + '/middleware'


# make sure we use the tools we've built
make.Environment( 'PATH', casual_middleware_path + '/tools/bin' + os.pathsep + os.getenv('PATH'))
make.Environment( 'LD_LIBRARY_PATH', os.pathsep.join( library_paths) + os.pathsep + os.getenv('LD_LIBRARY_PATH', ''))

target = dsl.LinkServer( 'server/bin/casual-example-server',
    [ 
       make.Compile( 'server/source/example.cpp'),
       make.Compile( 'server/source/example/work.cpp')
    ],
    [ 
        'casual-common',
        'casual-buffer'
    ],
    'server/source/example.services.yaml')

install_bin.append( target)

# make sure we got a resource property file available when we build with a resource 
make.Environment( 'CASUAL_RESOURCE_CONFIGURATION_FILE', casual_middleware_path + '/example/resources/resources.yaml')

resource_objects = [ make.Compile( 'server/source/example/resource.cpp')]

target = dsl.LinkServer( 'server/bin/casual-example-resource-server',
    resource_objects,
    [ 
        'casual-common',
        'casual-buffer'
    ],
    'server/source/example/resource.services.yaml')

install_bin.append( target)

# same as above, but does not name the resource, hence we can configure multiple
# resources (of rm-mockup)
target = dsl.LinkServer( 'server/bin/casual-example-dynamic-resource-server',
    resource_objects,
    [ 
        'casual-common',
        'casual-buffer'
    ],
    'server/source/example/dynamic.resource.services.yaml')

install_bin.append( target)



target = make.LinkExecutable( 'server/bin/casual-example-error-server',
    [ 
       make.Compile( 'server/source/example/error.cpp')
    ],
    [ 
        'casual-common',
        'casual-buffer'
    ])

install_bin.append( target)

make.LinkArchive( 'executable/bin/dummy', 
 [ make.Compile( 'executable/source/example.cpp') ]
)

make.LinkUnittest( 'unittest/bin/test-casual-example',
   [
      make.Compile( 'server/unittest/source/test_example.cpp'),
   ],
   [ 
      'casual-common',
      'casual-xatmi',
      'casual-unittest',
      'casual-domain-unittest',
      'casual-service-unittest',
      'casual-gateway-unittest',
      'casual-serviceframework',
   ])

# Install
make.Install( install_bin, dsl.paths().install + '/example/bin')





