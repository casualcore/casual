from casual.make.api import *

IncludePaths([
	'include',
	'../common/include',
	'../serviceframework/include',
	'../xatmi/include',
   '../domain/include',
	'../../thirdparty/database/include'] + 
   casual_make_optional_include_paths().split()
   )


LibraryPaths([
	'bin',
    '../common/bin',
    '../xatmi/bin',
    '../domain/bin',
    '../serviceframework/bin',
    '../configuration/bin'] + 
    casual_make_optional_library_paths().split()
   )


install_lib = []
install_bin = []
install_header = []

common_archive = LinkArchive( 'bin/casual-event-common',
    [
        Compile( 'source/common.cpp')
    ])

lib_api = LinkLibrary( 'bin/casual-event-api',
    [
        Compile( 'source/dispatch.cpp')
    ],
    [
        common_archive,
        'casual-common',
    ])

install_lib.append( lib_api)
install_header += [
   ( 'include/casual/event/model.h', 'casual/event'),
   ( 'include/casual/event/dispatch.h', 'casual/event'),
]


    
target = LinkExecutable( 'bin/casual-event-service-monitor',
	[
        Compile( 'source/service/monitor/database.cpp')
	],
	[
        common_archive,
        'casual-common',
        'sqlite3'
    ] )

install_bin.append( target)

target = LinkExecutable( 'bin/casual-event-service-log',
	[
	    Compile( 'source/service/log/main.cpp')
	],
	[
        common_archive,
        'casual-common'
   ] )

install_bin.append( target)

target = LinkExecutable( 'bin/casual-event-service-monitor-server',
	[
	    Compile( 'source/service/monitor/server.cpp')
	],
	[
        common_archive,
        'casual-common',
        'casual-serviceframework',
        'sqlite3'
	] )

install_bin.append( target)
	

LinkUnittest( 'bin/test-casual-event',
	[ 
        Compile( 'unittest/source/test_dispatch.cpp'),
        Compile( 'unittest/source/service/test_log.cpp'),
    ],
	[
        lib_api,
        'casual-common',
        'casual-unittest',
        'casual-domain-api',
        'casual-domain-utility',
        'casual-domain-unittest',
   ])	

casual_home = os.getenv('CASUAL_HOME')

Install( install_lib, casual_home + '/lib')
Install( install_bin, casual_home + '/bin')
Install( install_header, casual_home + '/include')








