from casual.middleware.make.dsl import *

IncludePaths([
	'include', 
	'../common/include', 
	'$(CASUAL_OPTIONAL_INCLUDE_PATHS)',
	])

LibraryPaths([
	'bin',
    '../common/bin',
    '$(CASUAL_OPTIONAL_LIBRARY_PATHS)',
    ])


install_lib = []
install_include = []
 

lib_xatmi = LinkLibrary( 'bin/casual-xatmi',
	[
      Compile( 'source/xatmi.cpp'),
      Compile( 'source/xatmi/server.cpp'),
      Compile( 'source/xatmi/executable.cpp'),
      Compile( 'source/xatmi/conversation.cpp'),
      Compile( 'source/xatmi/call.cpp'),
      Compile( 'source/xatmi/extended.cpp'),
      Compile( 'source/xatmi/internal/code.cpp'),
      Compile( 'source/xatmi/internal/log.cpp'),
      Compile( 'source/xa.cpp'),
      Compile( 'source/tx.cpp'),
	],
	['casual-common'])

install_lib.append( lib_xatmi)

install_include += [ 
   ( 'include/casual/xatmi/server.h', 'casual/xatmi'),
   ( 'include/casual/xatmi/executable.h', 'casual/xatmi'),
   ( 'include/casual/xatmi/extended.h', 'casual/xatmi'),
   ( 'include/casual/xatmi/defines.h', 'casual/xatmi'),
   ( 'include/casual/xatmi/flag.h', 'casual/xatmi'),
   ( 'include/casual/xatmi/code.h', 'casual/xatmi'),
   ( 'include/casual/xatmi/xa.h', 'casual/xatmi'),
   ( 'include/casual/xatmi.h', 'casual'),
   'include/xatmi.h',
   ( 'include/casual/tx/code.h', 'casual/tx'),
   ( 'include/casual/tx.h', 'casual'),
    'include/tx.h',
   ( 'include/casual/xa/code.h', 'casual/xa'),
   ( 'include/casual/xa/flag.h', 'casual/xa'),
   ( 'include/casual/xa.h', 'casual'),
    'include/xa.h',
]

LinkUnittest( 'bin/test-casual-xatmi',
    [
       Compile( 'unittest/source/test_buffer.cpp'),
       Compile( 'unittest/source/test_tx.cpp'),
       
    ],
    [ lib_xatmi, 'casual-common', 'casual-unittest'])

# Install
Install( install_lib, '$(CASUAL_HOME)/lib')
Install( install_include, '$(CASUAL_HOME)/include')



