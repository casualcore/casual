from casual.make.api import *


IncludePaths([
    'include',
    '../common/include',
    '../xatmi/include'] + 
    casual_make_optional_include_paths().split()
    )
	
LibraryPaths([
    'bin',
    '../common/bin'] +
    casual_make_optional_library_paths().split()
   )


install_lib = []

lib_serviceframework = LinkLibrary( 'bin/casual-serviceframework',
    [
        Compile( 'source/service/protocol.cpp'),
        Compile( 'source/service/protocol/implementation.cpp'),
        Compile( 'source/service/protocol/describe.cpp'),
        Compile( 'source/service/call.cpp'),
        Compile( 'source/log.cpp'),
        
    ],
    ['casual-common',])

install_lib.append( lib_serviceframework)


# unittest
LinkUnittest( 'bin/test-casual-serviceframework',
	[   
        Compile( 'unittest/source/service/test_protocol.cpp'),
        Compile( 'unittest/source/service/protocol/test_describe.cpp'),
    ],
	[ lib_serviceframework, 'casual-common', 'casual-unittest'])

casual_home = os.getenv('CASUAL_HOME')

Install( install_lib,  casual_home + '/lib')

