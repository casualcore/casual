import casual.make.api as make
import casual.middleware.make.api as dsl


make.IncludePaths([
    'include',
    '../common/include',
    '../xatmi/include']
    + make.optional_include_paths()
    + dsl.paths().include.gtest
    )
	
make.LibraryPaths([
    'bin',
    '../common/bin']
    + make.optional_library_paths()
    + dsl.paths().library.gtest
   )


install_lib = []

lib_serviceframework = make.LinkLibrary( 'bin/casual-serviceframework',
    [
        make.Compile( 'source/service/protocol.cpp'),
        make.Compile( 'source/service/protocol/implementation.cpp'),
        make.Compile( 'source/service/protocol/describe.cpp'),
        make.Compile( 'source/service/call.cpp'),
        make.Compile( 'source/log.cpp'),
        
    ],
    ['casual-common',])

install_lib.append( lib_serviceframework)


# unittest
make.LinkUnittest( 'bin/test-casual-serviceframework',
	[   
        make.Compile( 'unittest/source/service/test_protocol.cpp'),
        make.Compile( 'unittest/source/service/protocol/test_describe.cpp'),
    ],
	[ lib_serviceframework, 'casual-common', 'casual-unittest'])



make.Install( install_lib,  dsl.paths().install + '/lib')

