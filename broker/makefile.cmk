from casual.make.directive import *


IncludePaths( [
    'include',
    'admin/include',
	'../common/include',
	'../configuration/include',
	'../xatmi/include',
	'../serviceframework/include',
	'$(CASUAL_OPTIONAL_INCLUDE_PATHS)'])

LibraryPaths( [
    '../common/bin',
    '../serviceframework/bin',
	'../xatmi/bin',
	'../buffer/bin',
	'../configuration/bin',
	'$(CASUAL_OPTIONAL_LIBRARY_PATHS)'])


#
# VO
#


install_bins = []


casual_broker_logic_objectfiles = [
   Compile( 'source/broker.cpp', 'obj/broker.o'),
   Compile( 'source/handle.cpp', 'obj/handle.o'),
   Compile( 'source/state.cpp', 'obj/state.o'),
   Compile( 'source/transform.cpp', 'obj/transform.o'),
   ]


logic_archive = LinkArchive( 'bin/casual-broker-logic',
   casual_broker_logic_objectfiles )


	
casual_broker_objectfiles = [
    Compile( 'source/main.cpp', 'obj/main.o'),
    Compile( 'source/admin/server.cpp', 'obj/admin/server.o'),
]

target = LinkExecutable( 'bin/casual-broker',
	casual_broker_objectfiles,
	[
     logic_archive,
     'casual-common',
     'casual-sf',
     'casual-xatmi',
     'casual-configuration']
   )
   
   #casual-broker-admin-vo )

install_bins.append( target)
	
	
#
# admin-terminal
#


target = LinkExecutable( 'bin/casual-broker-admin',
    [ Compile( 'source/admin/client.cpp', 'obj/admin/client.o')],
    ['casual-common', 'casual-sf', 'casual-xatmi'])
	

Install( target,'$(CASUAL_HOME)/internal/bin')



test_casual_broker_isolated = [
#    Compile( 'unittest/isolated/source/test_broker.cpp', 'unittest/isolated/obj/test_broker.o'),
    Compile( 'unittest/isolated/source/test_broker_confguration.cpp', 'unittest/isolated/obj/test_broker_confguration.o'),
#    Compile( 'unittest/isolated/source/test_broker_transformation.cpp', 'unittest/isolated/obj/test_broker_transformation.o'),
]
 
 
LinkIsolatedUnittest( 'bin/test-casual-broker-isolated',
   test_casual_broker_isolated,
    [
     logic_archive,
     'casual-common', 
     'casual-sf', 
     'casual-configuration', 
     'casual-mockup-unittest-environment', 
     'casual-mockup',
     ])

	
#
# Install
#
Install( install_bins,'$(CASUAL_HOME)/bin')

